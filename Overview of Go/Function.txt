# Dalam module Go, nama fungsi tidak boleh sama. 
Tetapi jika dibuat independen/perfile, tidak masalah. Walaupun editor memberikan garis merah 

# mendeklarasikan fungsi (wajib type-annotations)
func func_name (params1 params1_type) (ret_type1, ret_type2){	
	return val1, val2
}

# untuk mengambil datanya pada saat memanggil:
val1, val2, := func_name()

# Fungsi anonim (tanpa nama)
biasanya digunakan untuk as variable/callback
func() { 
	fmt.Println("Hello from an anonymous function!") 
}() 

# Assign anonymous ke variabel (seperti JS)
greet := func(name string) { 
	fmt.Printf("Hello, %s!\n", name) 
}

# Func as a value/params
dapat di-assign ke variabel
atau parameter:		func foo(filter func(string) string){}

# Variadic
sebuah fungsi dapat menerima parameter sebanyak2nya dan akan dibaca sebagai array dalam fungsi tersebut. Harus ditempatkan di parameter terakhir